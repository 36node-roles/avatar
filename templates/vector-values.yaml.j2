# The "built-in" kubernetes logs source to collect logs from the `Pod`s running
# on the `Node`.
# Will be added by default, unless explicitly disabled.
kubernetesLogsSource:
  # Disable to omit the kubernetes logs source from being added.
  enabled: true
  # The name to use for the "built-in" kubernetes logs source.
  sourceId: kubernetes_logs
  # Additional config to embed at the kubernetes logs source.
  config:
    extra_label_selector: "vector.dev/enable=true"
  # Raw TOML config to embed at the kubernetes logs source (deprecated).
  rawConfig: null

# Sources to add to the generated `vector` config (besides "built-in" kubernetes
# logs source).
sources:
  {}
  # source_name:
  #   type: "source_type"
  #   option: "value"
  #   rawConfig: |
  #     option = "value"

# Transforms to add to the generated `vector` config.
transforms:
  json:
    type: "remap"
    inputs: ["kubernetes_logs"]
    rawConfig: |
      source = '''
      del(.file)
      if (.topic == null) {
        .topic = .kubernetes.pod_labels."vector.dev/topic"
      }
      parsed, err = parse_json(.message)
      if (err == null) {
        . = merge!(., parsed)
        del(.message)
      }
      '''
  withTopic:
    type: "filter"
    inputs: ["json"]
    condition: .topic != null

# Sinks to add to the generated `vector` config.
sinks:
  kafka:
    type: "kafka"
    inputs: ["withTopic"]
    bootstrap_servers: "[% kafka_bootstrap_server %]"
    compression: "none"
    key_field: "time"
    topic: "{{ topic }}"
    encoding:
      codec: "json"
  elasticsearch:
    type: "elasticsearch"
    inputs: ["kubernetes_logs"]
    endpoint: "[% elasticsearch_endpoint %]"
    index: "{{ kubernetes.pod_namespace }}-{{ kubernetes.pod_labels.name }}-%F"
